import React, { useEffect, useState } from "react";
import axios from "axios";

const HealthPrediction = ({ sensorData }) => {
    const [prediction, setPrediction] = useState(null);
    const [error, setError] = useState(null);
    const [loading, setLoading] = useState(false);

    const healthImpactMessages = {
        1: "‚úÖ –ù–∏–∑—å–∫–∏–π —Ä–∏–∑–∏–∫: –ü–æ–≤—ñ—Ç—Ä—è —á–∏—Å—Ç–µ, —Ä–∏–∑–∏–∫ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π.",
        2: "‚ö†Ô∏è –ü–æ–º—ñ—Ä–Ω–∏–π —Ä–∏–∑–∏–∫: –õ–µ–≥–∫–∏–π –≤–ø–ª–∏–≤ –Ω–∞ —á—É—Ç–ª–∏–≤—ñ –≥—Ä—É–ø–∏ –ª—é–¥–µ–π.",
        3: "üå¨Ô∏è–í–∏—Å–æ–∫–∏–π —Ä–∏–∑–∏–∫: –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –æ–±–º–µ–∂–∏—Ç–∏ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å –Ω–∞ –≤—ñ–¥–∫—Ä–∏—Ç–æ–º—É –ø–æ–≤—ñ—Ç—Ä—ñ.",
        4: "üî¥üö∑ –î—É–∂–µ –≤–∏—Å–æ–∫–∏–π —Ä–∏–∑–∏–∫: –ú–æ–∂–µ –≤–ø–ª–∏–≤–∞—Ç–∏ –Ω–∞ –≤—Å—ñ—Ö. –í–∞—Ä—Ç–æ —É–Ω–∏–∫–∞—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π –Ω–∞ –≤—É–ª–∏—Ü—ñ.",
        5: "‚ö†Ô∏èüè• –ù–µ–±–µ–∑–ø–µ—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å: –í–∏—Å–æ–∫–∏–π —Ä–∏–∑–∏–∫ –¥–ª—è –∑–¥–æ—Ä–æ–≤'—è. –¢–µ—Ä–º—ñ–Ω–æ–≤—ñ –∑–∞—Ö–æ–¥–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ!"
    };

    useEffect(() => {
        if (sensorData) {
            fetchPrediction(sensorData);
        }
    }, [sensorData]);

    const fetchPrediction = async (sensorData) => {
        setLoading(true);
        setError(null);
        try {
            console.log("üì§ –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö:", sensorData);
            const response = await axios.post("http://127.0.0.1:5000/predict_health", sensorData, {
                headers: { "Content-Type": "application/json" },
            });
            console.log("üì• –û—Ç—Ä–∏–º–∞–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑:", response.data.health_risk);
            setPrediction(response.data.health_risk);
        } catch (error) {
            console.error("‚ùå –ü–æ–º–∏–ª–∫–∞:", error);
            setError("–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–æ–≥–Ω–æ–∑.");
        }
        setLoading(false);
    };

    return (
        <div style={{ padding: "10px", border: "1px solid #ddd", borderRadius: "8px", background: "#f9f9f9", width: "100%" }}>
            <h3>üìä –ü—Ä–æ–≥–Ω–æ–∑ —Ä–∏–∑–∏–∫—É –∑–¥–æ—Ä–æ–≤'—è</h3>

            {loading ? (
                <p>‚è≥ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p>
            ) : error ? (
                <p style={{ color: "red" }}>{error}</p>
            ) : prediction !== null ? (
                <div>
                    <h2>–†—ñ–≤–µ–Ω—å —Ä–∏–∑–∏–∫—É: {prediction}</h2>
                    <p>{healthImpactMessages[prediction]}</p>
                </div>
            ) : (
                <p>–í–∏–±–µ—Ä—ñ—Ç—å —Å–µ–Ω—Å–æ—Ä –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É.</p>
            )}
        </div>
    );
};

export default HealthPrediction;
